{"version":3,"file":"0.js","sources":["webpack:///./components/Airline/AirlineDashboard/Cards/AirlineGraphCard.js","webpack:///./components/Airline/AirlineDashboard/Cards/index.js","webpack:///./components/Airline/AirlineDashboard/Layout/AirlineDashboardLayout.js","webpack:///./components/Graph/RouteAirlineBar.js"],"sourcesContent":["import React from 'react'\nimport {\n  Grid,\n  Dropdown,\n  Loader\n} from '../../../../node_modules/semantic-ui-react'\nimport dynamic from 'next/dynamic'\nimport '../Layout/style.css'\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalBarSeries,\n  FlexibleXYPlot,\n  HorizontalGridLines,\n  VerticalGridLines\n} from 'react-vis'\nimport { RouteAirlineBar } from '../../../Graph/RouteAirlineBar'\n\nconst airline = [\n  { key: 1, text: 'THA', value: 'THA' },\n  { key: 2, text: 'BKP', value: 'BKP' },\n  { key: 3, text: 'THD', value: 'THD' }\n]\n\nconst defaultY = [\n  { key: 1, text: 'No. of Route ', value: 'Route' },\n  { key: 2, text: 'Seat', value: 'Seat' },\n  { key: 3, text: 'Pax', value: 'Pax' },\n  // { key: 4, text: 'Load Factor ', value: 'Load Factor' },\n  // { key: 5, text: 'RPK', value: 'RPK' },\n  { key: 6, text: 'Frequency', value: 'Frequency' }\n]\n\nconst DefaultBar = dynamic(() => import('../../../Graph/defaultBar'), {\n  ssr: false\n})\n\n// const RouteAirlineBar = dynamic(\n//   () => import('../../../Graph/RouteAirlineBar'),\n//   {\n//     ssr: false\n//   }\n// )\n\nconst AirlineGraphCard = props => {\n  return (\n    <React.Fragment>\n      <Grid>\n        <Grid.Row textAlign=\"center\">\n          <Grid.Column width={6} />\n          <Grid.Column width={2} verticalAlign=\"middle\">\n            <Dropdown\n              type=\"airline\"\n              defaultValue=\"THA\"\n              options={airline}\n              name=\"airline\"\n              placeholder=\"Airline\"\n              selection\n              fluid\n              onChange={props.handleDropdown}\n            />\n          </Grid.Column>\n          <Grid.Column width={2} verticalAlign=\"middle\">\n            <Dropdown\n              defaultValue=\"Pax\"\n              options={defaultY}\n              name=\"defaultY\"\n              placeholder=\"Yaxis\"\n              selection\n              fluid\n              onChange={props.handleDropdown}\n            />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row textAlign=\"center\" style={{ paddingTop: '0px' }}>\n          {props.state.showdefault ? (\n            <Grid.Column>\n              <label className=\"header-label\">{props.state.defaultY}</label>\n            </Grid.Column>\n          ) : null}\n        </Grid.Row>\n        <Grid.Row textAlign=\"center\" style={{ paddingBottom: '0px' }}>\n          <Grid.Column\n            style={{\n              display: 'flex',\n              justifyContent: 'center'\n            }}\n          >\n            {props.state.showdefault ? (\n              <DefaultBar\n                airline={props.state.airline}\n                getRouteAirline={props.getRouteAirline}\n                handleYear={props.handleYear}\n                data={props.state.defaultGraph}\n                xTitle=\"Year\"\n                yTitle={props.defaultY}\n              />\n            ) : null}\n            {/* <DefaultBar\n              data={props.state.defaultGraph}\n              xTitle=\"Year\"\n              yTitle={props.defaultY}\n            /> */}\n          </Grid.Column>\n        </Grid.Row>\n        {/* {props.state.showdefault ? (\n          <Grid.Row textAlign=\"center\" style={{ paddingTop: '0px' }}>\n            <Grid.Column>\n              <label className=\"text-label\">Year</label>\n            </Grid.Column>\n          </Grid.Row>\n        ) : null} */}\n        {props.state.routestatus ? (\n          <React.Fragment>\n            <Grid.Row textAlign=\"center\">\n              <Grid.Column>\n                <label className=\"header-label\">\n                  Total of route {props.state.year} by {props.state.airline}{' '}\n                  Airline\n                </label>\n              </Grid.Column>\n            </Grid.Row>\n            <Grid.Row textAlign=\"center\">\n              <Grid.Column\n                style={{\n                  display: 'flex',\n                  justifyContent: 'center'\n                }}\n              >\n                <RouteAirlineBar data={props.state.routeAirlineData} />\n              </Grid.Column>\n            </Grid.Row>\n          </React.Fragment>\n        ) : null}\n      </Grid>\n    </React.Fragment>\n  )\n}\n\nexport { AirlineGraphCard }\n","export * from './AirlineGraphCard'\n","import React, { Component } from 'react'\nimport { AirlineGraphCard } from '../Cards'\nimport dynamic from 'next/dynamic'\nimport { Dimmer, Loader } from '../../../../node_modules/semantic-ui-react'\n\nclass AirlineDashboardLayout extends Component {\n  state = {\n    y2017: null,\n    airline: 'THA',\n    defaultY: 'Pax',\n    data: null,\n    defaultY2017: null,\n    defaultGraphX: ['2013', '2014', '2015', '2016', '2017'],\n    defaultGraphY: [],\n    showdefault: false,\n    defaultGraph: [\n      { x: '2013', y: 0, opacity: 1 },\n      { x: '2014', y: 0, opacity: 1 },\n      { x: '2015', y: 0, opacity: 1 },\n      { x: '2016', y: 0, opacity: 1 },\n      { x: '2017', y: 0, opacity: 1 }\n    ],\n    query: 'Test query',\n    load: true,\n    year: null,\n    routeAirlineData: [\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: '', y: 0 },\n      { x: 'Other', y: 0 }\n    ],\n    routestatus: false,\n    routeload: false,\n    crosshair: null\n  }\n\n  componentDidMount = () => {\n    this.getPax(this.state.airline)\n  }\n\n  handleYear = year => {\n    this.setState({ year: year })\n    this.setOpacity(this.state.defaultGraph)\n    this.forceUpdate()\n  }\n\n  handleDropdown = (e, data) => {\n    this.setState({ [data.name]: data.value })\n    this.forceUpdate()\n    if (data.name === 'defaultY') {\n      this.filterDefaultGraph(this.state.airline, data.value)\n    }\n    if (data.name === 'airline' && this.state.defaultY !== null) {\n      this.filterDefaultGraph(data.value, this.state.defaultY)\n    }\n    if (data.type === 'airline') {\n      if (this.state.year != null) {\n        this.getRouteAirline(this.state.year, data.value)\n      }\n    }\n  }\n\n  filterDefaultGraph = (airline, status) => {\n    this.state.showdefault = true\n    this.state.load = true\n    if (status === 'Pax') {\n      this.getPax(airline)\n    }\n    if (status === 'Frequency') {\n      this.getFrequency(airline)\n    }\n\n    if (status === 'Seat') {\n      this.getSeat(airline)\n    }\n\n    if (status === 'Route') {\n      this.getRoute(airline)\n    }\n    this.forceUpdate()\n  }\n\n  getPax = airline => {\n    console.log('Get Airport!')\n    fetch('http://localhost:4000/getPax', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'text/plain'\n      },\n      body: JSON.stringify({\n        airport: '%',\n        airline: airline,\n        flight: '%',\n        aircraft: '%'\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        if (data) {\n          this.loadFinished(data)\n        }\n        this.setDefaultGraphData(data.data)\n        this.forceUpdate()\n      })\n  }\n\n  getFrequency = airline => {\n    fetch('http://localhost:4000/getFrequency', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'text/plain'\n      },\n      body: JSON.stringify({\n        airport: '%',\n        airline: airline,\n        flight: '%',\n        aircraft: '%'\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        if (data) {\n          this.loadFinished(data)\n        }\n        this.setDefaultGraphData(data.data)\n        this.forceUpdate()\n      })\n  }\n\n  getSeat = airline => {\n    fetch('http://localhost:4000/getSeat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'text/plain'\n      },\n      body: JSON.stringify({\n        airport: '%',\n        airline: airline,\n        flight: '%',\n        aircraft: '%'\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        if (data) {\n          this.loadFinished(data)\n        }\n        this.setDefaultGraphData(data.data)\n        this.forceUpdate()\n      })\n  }\n\n  getRoute = airline => {\n    fetch('http://localhost:4000/getRoute', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'text/plain'\n      },\n      body: JSON.stringify({\n        airport: '%',\n        airline: airline,\n        flight: '%',\n        aircraft: '%'\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        if (data) {\n          this.loadFinished(data)\n        }\n\n        this.setDefaultGraphData(data.data)\n        this.forceUpdate()\n      })\n  }\n\n  getRouteAirline = (year, airline) => {\n    this.setState({ routestatus: false, routeload: true })\n    fetch('http://localhost:4000/getRouteAirline', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'text/plain'\n      },\n      body: JSON.stringify({\n        year: year,\n        airline: airline\n      })\n    })\n      .then(res => res.json())\n      .then(data => {\n        console.log(data)\n        // this.setRouteAirlineGraph(data.data)\n        if (data) {\n          this.setRouteAirlineGraph(data.data)\n          this.setState({ routestatus: true, routeload: false })\n          // this.loadFinished(data)\n        }\n\n        // this.setDefaultGraphData(data.data)\n        // this.forceUpdate()\n      })\n  }\n\n  loadFinished = () => {\n    this.setState({ load: false })\n    this.forceUpdate\n  }\n\n  setDefaultGraphData = data => {\n    for (let i = 0; i < data.length; i++) {\n      this.state.defaultGraph[i].y = data[i].Results\n\n      console.log(data[i].Results)\n    }\n    this.setState({ showdefault: true })\n  }\n\n  setRouteAirlineGraph = data => {\n    let sum = 0\n    for (let i = 0; i < data.length; i++) {\n      if (i < 20) {\n        this.state.routeAirlineData[i].x = data[i].AIRPORT\n        this.state.routeAirlineData[i].y = data[i].Results\n      } else {\n        sum = sum + data[i].Results\n      }\n    }\n    this.state.routeAirlineData[20].y = sum\n    this.forceUpdate()\n  }\n\n  setOpacity = data => {\n    for (let i = 0; i < data.length; i++) {\n      data[i].opacity = 1\n    }\n  }\n\n  inCrosshair = data => {\n    this.state.crosshair = data\n  }\n\n  leaveCrosshair = () => {\n    this.setState({ crosshair: null })\n  }\n\n  render() {\n    console.log(this.state.routeAirlineData)\n\n    return (\n      <div className=\"section-dashboard\">\n        <AirlineGraphCard\n          handleDropdown={this.handleDropdown}\n          handleYear={this.handleYear}\n          getRouteAirline={this.getRouteAirline}\n          state={this.state}\n        />\n        <Dimmer active={this.state.load}>\n          <Loader size=\"big\">Preparing Data</Loader>\n        </Dimmer>\n        {this.state.load ? null : (\n          <Dimmer active={this.state.routeload}>\n            <Loader size=\"big\">Get Route!</Loader>\n          </Dimmer>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default AirlineDashboardLayout\n","import React, { Component } from 'react'\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalBarSeries,\n  FlexibleXYPlot,\n  HorizontalGridLines,\n  VerticalGridLines,\n  Crosshair\n} from 'react-vis'\n\nclass RouteAirlineBar extends Component {\n  state = {\n    crosshairValues: null\n  }\n\n  render() {\n    return (\n      <XYPlot\n        height={400}\n        width={900}\n        margin={{ left: 80, top: 10, bottom: 40 }}\n        xType=\"ordinal\"\n        onMouseLeave={() =>\n          this.setState({ selectedPointId: null, crosshairValues: null })\n        }\n      >\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis\n          style={{\n            text: { stroke: 'none', fill: '#6b6b76', fontWeight: 600 },\n            ticks: { stroke: '#ADDDE1' }\n          }}\n          position=\"middle\"\n        />\n        <YAxis />\n        <VerticalBarSeries\n          color=\"#28c1b2\"\n          data={this.props.data}\n          onNearestX={(value, { index }) =>\n            this.setState({\n              selectedPointId: index,\n              crosshairValues: [value]\n            })\n          }\n        />\n        {this.state.crosshairValues && (\n          <Crosshair values={this.state.crosshairValues}>\n            <div\n              style={{\n                width: '80px',\n                color: 'grey',\n                fontSize: '14px',\n                fontWeight: 'bold'\n              }}\n            >\n              <p>X: {this.state.crosshairValues[0].x}</p>\n              <p>Y: {this.state.crosshairValues[0].y}</p>\n            </div>\n          </Crosshair>\n        )}\n      </XYPlot>\n    )\n  }\n}\n\n// const RouteAirlineBar = props => {\n//   return (\n\n//   )\n// }\n\nexport { RouteAirlineBar }\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAKA;AACA;AACA;AASA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;;;;;;;;;;;;;AC3IA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AA5CA;AACA;AA8CA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AANA;AAaA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AANA;AAWA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA/RA;AACA;AAiSA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvSA;AACA;AACA;AAUA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAFA;AAIA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AADA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AArDA;AAyDA;AAEA;AACA;AACA;AACA;;;;;A","sourceRoot":""}