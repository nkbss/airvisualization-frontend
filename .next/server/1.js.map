{"version":3,"file":"1.js","sources":["webpack:///./components/Graph/newdefaultBar.js"],"sourcesContent":["import React, { Component } from 'react'\nimport {\n  XYPlot,\n  XAxis,\n  YAxis,\n  VerticalBarSeries,\n  FlexibleXYPlot,\n  HorizontalGridLines,\n  VerticalGridLines,\n  Hint,\n  Crosshair\n} from 'react-vis'\n\nclass defaultBar extends Component {\n  state = {\n    crosshairValues: null\n  }\n\n  render() {\n    console.log(this.state.crosshairValues)\n    return (\n      <XYPlot\n        height={550}\n        width={700}\n        margin={{ left: 80, top: 10, bottom: 40 }}\n        xType=\"ordinal\"\n        onMouseLeave={() =>\n          this.setState({ selectedPointId: null, crosshairValues: null })\n        }\n      >\n        <VerticalGridLines />\n        <HorizontalGridLines />\n        <XAxis\n          // attr=\"x\"\n          // attrAxis=\"y\"\n          // orientation=\"bottom\"\n          // position=\"end\"\n          // title=\"x-axis\"\n          // title={props.xTitle}\n          style={{\n            text: { stroke: 'none', fill: '#6b6b76', fontWeight: 600 },\n            ticks: { stroke: '#ADDDE1' }\n            // title: { fontSize: '20px', tranform: 'translate(100px,100px)' }\n          }}\n          position=\"middle\"\n        />\n        <YAxis\n          // attr=\"y\"\n          // attrAxis=\"x\"\n          // orientation=\"left\"\n          // position=\"end\"\n          title={this.props.yTitle}\n        />\n        {/* {hint.map((data, index) => {\n                    return data\n                  })} */}\n        <VerticalBarSeries\n          data={this.props.data}\n          barWidth={0.6}\n          stroke=\"white\"\n          onValueMouseOver={(datapoint, { index }) => {\n            console.log(datapoint)\n            // hint[0] = (\n            //   <Hint value={datapoint}>\n            //     <div style={{ background: 'white', color: 'black' }}>\n            //       <p>{datapoint.y}</p>\n            //     </div>\n            //   </Hint>\n            // )\n\n            // console.log(hint)\n          }}\n          onNearestXY={(value, { index }) =>\n            this.setState({\n              selectedPointId: index,\n              crosshairValues: [value]\n            })\n          }\n          onValueClick={(datapoint, { index }) => {\n            this.props.handleYear(datapoint.x)\n            this.props.getRouteAirline(datapoint.x, this.props.airline)\n            console.log(datapoint.x)\n            console.log(index)\n            datapoint.opacity = 0.5378465593937095\n          }}\n        />\n        {this.state.crosshairValues && (\n          <Crosshair values={this.state.crosshairValues}>\n            <div\n              style={{\n                width: '80px',\n                color: 'grey',\n                fontSize: '14px',\n                fontWeight: 'bold'\n              }}\n            >\n              <p>X: {this.state.crosshairValues[0].x}</p>\n              <p>Y: {this.state.crosshairValues[0].y}</p>\n            </div>\n          </Crosshair>\n        )}\n      </XYPlot>\n    )\n  }\n}\n\nexport default defaultBar\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAWA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;;AAGA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AADA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AANA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAFA;AAKA;AAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA;AACA;AACA;AAJA;AAKA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAFA;AADA;AAMA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA1FA;AACA;AA4FA;;;;A","sourceRoot":""}